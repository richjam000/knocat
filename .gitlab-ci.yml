variables:
  REVIEW_IMAGE_NAME: review-${CI_PROJECT_NAME}											# review-knocat
  REVIEW_IMAGE_TAG: ${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}									# branch600-ca3ec109
  PRODUCTION_IMAGE_NAME: production-${CI_PROJECT_NAME} 										# production-knocat

  REVIEW_CONTAINER_NAME: review-${CI_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}					# review-knocat-branch600-ca3ec109

  REVIEW_URL: http://www.${REVIEW_CONTAINER_NAME}.knocat.com/						# http://www.review-knocat-branch600-ca3ec109.knocat.com
  REVIEW_URL: http://www.review-${CI_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}.knocat.com/			# http://www.review-knocat-branch600-ca3ec109.knocat.com

stages:
  - build
  - deploy-review
  - deploy-prod

build_image:
   stage: build
   tags:
    - dind
   script:
     - echo "Build the image $REVIEW_IMAGE_NAME:$REVIEW_IMAGE_TAG"
     - docker build -t $REVIEW_IMAGE_NAME:$REVIEW_IMAGE_TAG -f docker/Dockerfile .
   except:
     - master
     
deploy_review:
   stage: deploy-review
   variables:
    GIT_STRATEGY: none
   environment:
    name: review/review-${CI_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}
    url: http://www.review-${CI_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}.knocat.com/
    on_stop: stop_review
   tags:
    - dind
   script:
     - echo "Review Container Name  $REVIEW_CONTAINER_NAME"
     - echo "Review URL $REVIEW_URL"
     - echo "Stop and remove the review container if running/exists"
     - docker container stop $REVIEW_CONTAINER_NAME || echo "Container not running"
     - docker container rm $REVIEW_CONTAINER_NAME || echo "Container does not exist"
     - echo "Start the review container"
     - docker run -d --name=$REVIEW_CONTAINER_NAME --network=jamnet $REVIEW_IMAGE_NAME:$REVIEW_IMAGE_TAG
   except:
     - master

stop_review:
  tags:
    - dind
  stage: deploy-review
  variables:
    GIT_STRATEGY: none
  script:
    - echo "Remove review container"
    - docker container stop $REVIEW_CONTAINER_NAME || echo "Container not running"
    - docker container rm $REVIEW_CONTAINER_NAME || echo "Container does not exist"
    - docker rmi $REVIEW_IMAGE_NAME:$REVIEW_IMAGE_TAG
  when: manual
  environment:
    name: review/review-${CI_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}
    url: http://www.review-${CI_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}.knocat.com/
    action: stop
  except:
     - master

deploy_prod:
  stage: deploy-prod
  variables:
    GIT_STRATEGY: none
    PRODUCTION_CONTAINER_NAME: production-${CI_PROJECT_NAME}									# production-knocat
    REVIEW_IMAGE_TAG_ATMERGE: ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}-${CI_MERGE_REQUEST_SOURCE_BRANCH_SHA}				# branch600-ca3ec109
    PRODUCTION_IMAGE_TAG: ${CI_MERGE_REQUEST_SOURCE_BRANCH_SHA}
  tags:
    - dind
  script:
    - echo "docker tag $REVIEW_IMAGE_NAME:$REVIEW_IMAGE_TAG_ATMERGE $PRODUCTION_IMAGE_NAME:$PRODUCTION_IMAGE_TAG"
    - docker tag $REVIEW_IMAGE_NAME:$REVIEW_IMAGE_TAG $PRODUCTION_IMAGE_NAME:$PRODUCTION_IMAGE_TAG
    - echo "Stop and remove the current production container"
    - docker stop $PRODUCTION_CONTAINER_NAME || echo "Continue"
    - docker rm $PRODUCTION_CONTAINER_NAME || echo "Continue"
    - echo "Create a new production container ($PRODUCTION_CONTAINER_NAME) based on the new image ($PRODUCTION_IMAGE_NAME:$PRODUCTION_IMAGE_TAG)"
    - >
       docker run -d --name=$PRODUCTION_CONTAINER_NAME --network=jamnet --hostname=$PRODUCTION_CONTAINER_NAME --restart=always 
       --volume ${PRODUCTION_CONTAINER_NAME}-logs:/var/log/httpd 
       $PRODUCTION_IMAGE_NAME:$PRODUCTION_IMAGE_TAG
  environment:
    name: production
    url: http://www.knocat.com
  when: manual
  only:
  - merge_requests
